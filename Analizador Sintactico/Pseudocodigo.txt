void programa(){
	match('program');
	identificador();
	match(';');
	variables(); 
	while(!match('begin')){
		funcion();
		procedimiento();
	}
	bloque();
	while(!match('end')){
		match(';');
		bloque();
	}
	match('.');
}				

void bloque(){
	sentencia();
	while(match(';')){
		bloque();
	}

	sentenciaCompuesta();
		while(match(';')){
		bloque();
	}
}

void sentencia(){
	asignacion();
	alternativa();
	repetitiva();
	leer();
	escribir();
	llamada_sub();
}

void asignacion(){
	identificador();
	match(':=');
	expresion();
}

void funcion(){
	match('function');
	identificador();
	if(match('(')){
		params();
		match(')');
	}
	match(':');
	tipo();
	match(';');
	variables();
	while(token != 'begin'){
		function();
		procedure();
	}
	sentenciaCompuesta();
}

void procedimiento(){
	match('procedure');
	identificador();
	if(match('(')){
		params();
		match(')');
	}
	match(';');
	variables();
	while(token != 'begin'){
		function();
		procedure();
	}
	sentenciaCompuesta();
}

void identificador(){
	letra();
	while(token == id){
		letra();
		digito();
	}
}

void variables(){
	while(match('var')){
		lista_identificadores();
	}
}

void params(){
	while(token == 'id'){
		lista_identificadores();
	}
}

void lista_identificadores(){
	identificador();
	while(match(','){
		identificador();
	}
	match(':');
	tipo();
	match(';');
}

void alternativa(){
	match('if');
	expresion();
	match('then');
	bloque();
	alternativa'();
}

void alternativa'(){
	if(match('else')){
		bloque();
	}
}

void repetitiva(){
	match('while');
	expresion();
	match('do');
	bloque();
}

void llamada_sub(){
	identificador();
	if(match('(')){
		expresion();
		while(match(',')){
			expresion();
		}
		match(')');
	}
}

void leer(){
	match('read');
	match('(');
	identificador();
	match(')');
}

void escribir(){
	match('write');
	match('(');
	identificador();
	match(')');
}

void sentenciaCompuesta(){
	match('begin');
	bloque();
	match('end');
}

void operador_comparacion(){
	match('=');
	match('<>');
	match('>');
	match('<');
	match('>=');
	match('<=');
}

void expresion(){
	expresion1();
	expresion'();	
}

void expresion'(){
	if(match('OR')){
		expresion1();
		expresion'();	
	}
}

void expresion1(){
	expresion2();
	expresion1'();	
}

void expresion1'(){
	if(match('AND')){
		expresion2();
		expresion1'();	
	}
}

void expresion2(){
	match('NOT')
	expresion3();	
}

void expresion3(){
	expresion4();
	expresion3'();	
}

void expresion3'(){
	if(operador_comparacion()){
		expresion4();
		expresion3'();	
	}
}

void expresion4(){
	expresion5();
	expresion4'();	
}

void expresion4'(){
	if(match('+') || match('-'){
		expresion5();
		expresion4'();
	}
}

void expresion5(){
	expresion6();
	expresion5'();	
}

void expresion5'(){
	if(match('*') || match('/'){
		expresion6();
		expresion5'();
	}
}

void expresion6(){
	(match('-') || match('+'))
	factor();
}

void factor(){
	if(match('(')){
		expresion();
		match(')');
	}else{
		id();
		numero();
		booleano();
		llamada_sub();
	}
}

void letra(){
	
}

void digito(){
	
}

void tipo(){
	
}